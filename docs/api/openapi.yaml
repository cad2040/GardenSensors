openapi: 3.0.0
info:
  title: Garden Sensors API
  version: 1.0.0
  description: API for managing garden sensors and their readings

servers:
  - url: http://localhost/api
    description: Local development server
  - url: https://api.gardensensors.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Sensor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          enum: [moisture, temperature, humidity, light]
        location:
          type: string
        min_threshold:
          type: number
        max_threshold:
          type: number
        unit:
          type: string
        last_reading:
          type: number
        last_reading_time:
          type: string
          format: date-time

    Reading:
      type: object
      properties:
        id:
          type: integer
          format: int64
        sensor_id:
          type: integer
          format: int64
        value:
          type: number
        timestamp:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

paths:
  /sensors:
    get:
      summary: List all sensors
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of sensors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new sensor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        '201':
          description: Sensor created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sensors/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64

    get:
      summary: Get sensor by ID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sensor details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '404':
          description: Sensor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update sensor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        '200':
          description: Sensor updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'
        '404':
          description: Sensor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete sensor
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Sensor deleted
        '404':
          description: Sensor not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /sensors/{id}/readings:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64

    get:
      summary: Get sensor readings
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of readings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reading'

    post:
      summary: Add sensor reading
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: number
                timestamp:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Reading added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reading' 